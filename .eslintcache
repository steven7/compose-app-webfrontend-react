[{"/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/Login.js":"1","/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/Dashboard.js":"2","/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/PlayAudio.js":"3","/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/CreateDJTrack.js":"4","/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/CreateComposeAITrack.js":"5","/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/Home.js":"6"},{"size":2806,"mtime":1641098046944,"results":"7","hashOfConfig":"8"},{"size":10382,"mtime":1641104927721,"results":"9","hashOfConfig":"8"},{"size":4559,"mtime":1641105963208,"results":"10","hashOfConfig":"8"},{"size":1963,"mtime":1634497959284,"results":"11","hashOfConfig":"8"},{"size":6305,"mtime":1641538027101,"results":"12","hashOfConfig":"8"},{"size":156,"mtime":1589942531321,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oxdcnb",{"filePath":"16","messages":"17","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/Login.js",[],"/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/Dashboard.js",["27","28","29","30","31","32","33","34","35","36"],"import React, {useState} from 'react';\nimport axios from \"axios\";\nimport { createMuiTheme } from \"@material-ui/core/styles\"\nimport { getPortNumber, getUser } from './utils/Common';\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction  from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popup from \"reactjs-popup\";\n\nimport {\n    usePopupState,\n    bindTrigger,\n    bindMenu,\n} from 'material-ui-popup-state/hooks'\n\nimport MusicIcon from \"./music_icon_black.png\";\n\nfunction Dashboard(props) {\n\n    const user = getUser();\n\n    const [tracks, setTracks] = React.useState([]);\n    const [error, setError] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [oneTrack, setOneTrack] = React.useState(null);\n    const [oneTrackID, setOneTrackID] = React.useState(null);\n\n    const history = useHistory();\n\n    const ReactDOM = require('react-dom');\n\n    const data = {\n        userID: user.ID\n    };\n\n    const options = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    console.log(\"user:   \" + user)\n    console.log(\"userID: \" + user.ID)\n    console.log(\"data:   \" + data)\n\n    React.useEffect(() => {\n        setLoading(true); //\n        axios.post('http://localhost:' + getPortNumber() + '/api/tracks/index', data\n            ).then(response => {\n\n                setLoading(false);\n                const newTracks = response.data\n                setTracks(newTracks);\n\n            }).catch(error => {\n                console.log(error)\n                setLoading(false);\n                setError(\"Something went wrong. Please try again later.\");\n        });\n    }, []);\n\n    const handleListItemClick = (event, oneTrack) => {\n        var trackType = {\n            pathname: '/playAudio',\n            state: {\n                data:{\n                    'track':oneTrack,\n                }\n            }\n        }\n        history.push(trackType);\n    };\n\n    const handleEditTrackClick = (event, oneTrack, popupState) => {\n        console.log(\"Item clicked with track \" + oneTrack);\n        console.log('tap')\n\n        setOneTrack(oneTrack)\n\n        const oneTrackID = oneTrack.ID;\n        console.log(\"lol track id \" + oneTrackID);\n\n        const oneTrackTitle = oneTrack.title;\n        console.log(\"lol track title \" + oneTrackTitle);\n        popupState.close()\n        var trackType = {\n            pathname: '/editTrack',\n            state: {\n                data:{\n                    'track':oneTrack,\n                }\n            }\n        }\n        history.push(trackType);\n    }\n\n    const node = document.createElement(\"div\");\n    const popup = (message, {type, timeout}) => {\n        document.body.appendChild(node);\n        const PopupContent = () => {\n            return (\n                <Popup type={type} open={true} timeout={timeout}>\n                    {message}\n                    <button\n                        onClick={clear}\n                    >Close</button>\n                </Popup >\n            );\n        };\n\n        const clear = () => {\n            ReactDOM.unmountComponentAtNode(node);\n            node.remove();\n        }\n\n        ReactDOM.render(<PopupContent/>, node);\n    };\n\n\n    const handleDialogClickYes = () => {\n        setOpen(true);\n        // carryoutDeleteTrack()\n        console.log('oneTrack ' + oneTrack)\n        console.log('oneTrack id ' + oneTrack.ID)\n    };\n\n    const handleDialogClose = () => {\n        setOpen(false);\n    };\n\n    var handleDeleteTrackClick = (event, oneTrack, popupState) => {\n        popupState.close()\n        // TODO:\n        // setOneTrack(oneTrack)\n        console.log('oneTrack ' + oneTrack)\n        setOneTrack(oneTrack)\n        console.log('oneTrack ' + oneTrack)\n        console.log('oneTrack ID ' + oneTrack.ID)\n        setOneTrack(oneTrack.ID)\n        console.log('oneTrack ID ' + oneTrack.ID)\n        popup(\"text within modal\", {type: \"info\"});\n\n        setOpen(true);\n    }\n\n    const handleDeleteTrackClickWithID = (event, id)  => {\n        console.log('oneTrack ' + oneTrack)\n        console.log('oneTrack id ' + oneTrackID)\n        console.log('oneTrack id ' + id)\n    }\n\n    const carryoutDeleteTrack = (oneTrack) => {\n        setLoading(true);\n\n        const trackID = oneTrack.ID;\n\n        const iTrackID = parseInt(trackID);\n        const data = {\n            trackID: iTrackID\n        };\n\n        axios.post('http://localhost:' + getPortNumber() + '/api/tracks/delete',  data\n        ).then(response => {\n            setLoading(false);\n            refreshPage()\n        }).catch(error => {\n            console.log(error)\n            setLoading(false);\n            setError(\"Something went wrong. Please try again later.\");\n        })\n    }\n\n    const handleCreateLocal = () => {\n        history.push('/createLocalTrack');\n    }\n\n    const handleCreateComposeAI = () => {\n        history.push('/createComposeAITrack');\n    }\n\n    const popupState = usePopupState({ variant: 'popover', popupId: 'demoMenu' })\n\n    const theme = createMuiTheme({\n        shadows: [\"none\"]\n    });\n\n    return (\n        <div>\n            <h1>tracks</h1>\n            <ul>\n                {/*remove filter once edit is set up!*/}\n                {/*.filter(track => track.title != '')*/}\n                {tracks.map( (track, index) => (\n\n                    <div\n                        style={{paddingLeft: '250px',\n                            paddingRight: '250px',}}\n                        >\n                        <ListItem\n                            // button\n                            key={track.id}\n                            onClick={(event) => handleListItemClick(event, track)}\n                            style={{paddingLeft: '20px'}}\n                            theme={theme}\n                            >\n\n                            <ListItemIcon>\n                                <img src={MusicIcon}\n                                width={50}\n                                height={50}\n                                style={{paddingLeft: '0px'}}/>\n                            </ListItemIcon>\n\n                            <ListItemText\n\n                                primary={track.title}\n                                secondary={track.description}\n\n                                style={{paddingLeft: '25px'}}\n                            />\n\n                            <ListItemSecondaryAction>\n                                <IconButton\n                                    variant=\"contained\"\n                                    {...bindTrigger(popupState)}>\n                                    <MoreVert />\n                                </IconButton>\n                                <Menu\n                                    {...bindMenu(popupState)}\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                    // onClick = {setOneTrack(track)}\n                                    elevation={1}\n                                >\n                                    <MenuItem onClick={(event) => handleEditTrackClick(event, track, popupState)}>Edit track</MenuItem>\n                                    <MenuItem onClick={(event) => handleDeleteTrackClick(event, track, popupState)}>Delete track</MenuItem>\n                                    <MenuItem onClick={(event) => handleDeleteTrackClickWithID(event, track.ID)}>two Delete track</MenuItem>\n                                </Menu>\n                                <Dialog\n                                    open={open}\n                                    onClose={handleDialogClose}\n                                    aria-labelledby=\"alert-dialog-title\"\n                                    aria-describedby=\"alert-dialog-description\"\n                                    elevation={1}\n                                    BackdropProps={{ style: { backgroundColor: \"transparent\" } }} >\n\n                                    <DialogTitle id=\"alert-dialog-title\">\n                                        {\"Delete track?\"}\n                                    </DialogTitle>\n                                    <DialogContent>\n                                        <DialogContentText id=\"alert-dialog-description\" elevation={1}>\n                                            Please confirm that you want to delete this track. This cannot be undone.\n                                        </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={handleDialogClickYes} autoFocus>\n                                            Yes\n                                        </Button>\n                                        <Button onClick={handleDialogClose}>No</Button>\n\n                                    </DialogActions>\n                                </Dialog>\n                            </ListItemSecondaryAction>\n\n                        </ListItem>\n\n                    </div>\n\n                ))}\n            </ul>\n\n            <input type=\"button\" value='new local track' onClick={handleCreateLocal} />\n            <input type=\"button\" value='new compose ai track' onClick={handleCreateComposeAI} />\n\n        </div>\n    );\n\n    // handle click event of logout button\n    const handleLogout = () => {\n        // removeUserSession();\n        props.history.push('/login');\n    }\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n\n}\n\nexport default Dashboard;\n","/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/PlayAudio.js",["37","38"],"/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/CreateDJTrack.js",["39","40","41","42","43"],"/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/CreateComposeAITrack.js",["44","45"],"/Users/steve/Documents/Go/go-createmusic/_frontend/create_music_frontend/src/Home.js",[],{"ruleId":"46","severity":1,"message":"47","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":24},{"ruleId":"46","severity":1,"message":"50","line":36,"column":12,"nodeType":"48","messageId":"49","endLine":36,"endColumn":17},{"ruleId":"46","severity":1,"message":"51","line":37,"column":12,"nodeType":"48","messageId":"49","endLine":37,"endColumn":19},{"ruleId":"46","severity":1,"message":"52","line":40,"column":24,"nodeType":"48","messageId":"49","endLine":40,"endColumn":37},{"ruleId":"46","severity":1,"message":"53","line":50,"column":11,"nodeType":"48","messageId":"49","endLine":50,"endColumn":18},{"ruleId":"54","severity":1,"message":"55","line":74,"column":8,"nodeType":"56","endLine":74,"endColumn":10,"suggestions":"57"},{"ruleId":"46","severity":1,"message":"58","line":166,"column":11,"nodeType":"48","messageId":"49","endLine":166,"endColumn":30},{"ruleId":"59","severity":1,"message":"60","line":222,"column":33,"nodeType":"61","endLine":225,"endColumn":63},{"ruleId":"62","severity":1,"message":"63","line":293,"column":5,"nodeType":"64","messageId":"65","endLine":296,"endColumn":6},{"ruleId":"46","severity":1,"message":"66","line":293,"column":11,"nodeType":"48","messageId":"49","endLine":293,"endColumn":23},{"ruleId":"46","severity":1,"message":"51","line":9,"column":12,"nodeType":"48","messageId":"49","endLine":9,"endColumn":19},{"ruleId":"54","severity":1,"message":"67","line":123,"column":8,"nodeType":"56","endLine":123,"endColumn":10,"suggestions":"68"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":24},{"ruleId":"46","severity":1,"message":"69","line":2,"column":33,"nodeType":"48","messageId":"49","endLine":2,"endColumn":50},{"ruleId":"46","severity":1,"message":"50","line":9,"column":12,"nodeType":"48","messageId":"49","endLine":9,"endColumn":17},{"ruleId":"46","severity":1,"message":"51","line":10,"column":12,"nodeType":"48","messageId":"49","endLine":10,"endColumn":19},{"ruleId":"46","severity":1,"message":"70","line":42,"column":11,"nodeType":"48","messageId":"49","endLine":42,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":9,"column":12,"nodeType":"48","messageId":"49","endLine":9,"endColumn":17},{"ruleId":"46","severity":1,"message":"71","line":9,"column":19,"nodeType":"48","messageId":"49","endLine":9,"endColumn":27},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'setOneTrackID' is assigned a value but never used.","'options' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'carryoutDeleteTrack' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'handleLogout' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.history.location.state.data.track.ID' and 'props.history.location.state.data.track.title'. Either include them or remove the dependency array.",["73"],"'removeUserSession' is defined but never used.","'handleGoToIndex' is assigned a value but never used.","'setError' is assigned a value but never used.",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [data]",{"range":"78","text":"79"},"Update the dependencies array to be: [props.history.location.state.data.track.ID, props.history.location.state.data.track.title]",{"range":"80","text":"81"},[2413,2415],"[data]",[3531,3533],"[props.history.location.state.data.track.ID, props.history.location.state.data.track.title]"]